


//@skip-check module-region-empty
#Область ПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти
//@skip-check module-region-empty
#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВыбратьФайлыКомандаНаСервере(АдресВоВременномХранилище, ИмяСобытия, НомерЗадачи) Экспорт

	НомерЗадачи = НомерЗадачи;
	ИмяКаталога = "C:\1CFilesDocument\" + "Номер документа_" + НомерЗадачи + "\";
	КаталогПользователя = Новый Файл(ИмяКаталога);
	Если Не КаталогПользователя.Существует() Тогда
		СоздатьКаталог(КаталогПользователя);
	КонецЕсли;       
	
	
	Для Каждого ФайлаИзМассива Из АдресВоВременномХранилище Цикл
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(ФайлаИзМассива.Значение);
		УдалитьИзВременногоХранилища(ФайлаИзМассива.Значение);

		ИмяФайла =  ФайлаИзМассива.Представление;
		ПолноеИмяФайла = "C:\1CFilesDocument\" + "Номер документа_" + НомерЗадачи + "\" + ИмяФайла;
		ФайлВФС = Новый Файл(ПолноеИмяФайла);
		
		
		Если ФайлВФС.Существует() Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = ("Такой файл уже существует");
			Сообщение.Сообщить();
		Иначе
			//документ
			
			НовыйОбъектПоиск = Задачи.Документ.НайтиПоНомеру(НомерЗадачи);
			ПолучитьОбъектДокумент = НовыйОбъектПоиск.ПолучитьОбъект();
			ПолучитьОбъектДокумент.Разблокировать();
			НовыйОбъект = ПолучитьОбъектДокумент.ФайлыКЗадаче.Добавить();
			НовыйОбъект.ДатаДобавления = ТекущаяДата();
			НовыйОбъект.НаименованиеФайла = ИмяФайла;
			НовыйОбъект.СсылкаАдрес = ПолноеИмяФайла;
			ПолучитьОбъектДокумент.Записать();
			ДвоичныеДанные.Записать(ПолноеИмяФайла);
						
		КонецЕсли;
		
	КонецЦикла;
	
	
	
	
КонецПроцедуры

#КонецОбласти