&НаКлиенте
Процедура ОбсужденияКЗадачеСообщениеОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных,
	СтандартнаяОбработка)
	ПолучитьВсехУчастников = Объект.ЛицаКЗадаче;
	Для Каждого УчастникОбсуждений Из ПолучитьВсехУчастников Цикл
		УчастникОбсуждений.ПросмотренноЛицаКЗадаче = Ложь;
	КонецЦикла;
КонецПроцедуры
&НаКлиенте
Процедура ОбсужденияКЗадачеПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока И Не Копирование Тогда
		Элемент.ТекущиеДанные.ВремяСоздания = ТекущаяДата();

	КонецЕсли;
	Элемент.ТекущиеДанные.Отправитель =  ИмяПользователя();

КонецПроцедуры

&НаКлиенте
Процедура ОбсужденияКЗадачеПриИзменении(Элемент)
	Элементы.ОбсужденияКЗадаче.Обновить();
КонецПроцедуры
&НаСервере
Процедура ПриОткрытииНаСервере()
	Если ИмяПользователя() <> Объект.ОтКого Тогда
		ЭтотОбъект.Элементы.ДляКого.ТолькоПросмотр = Истина;
	КонецЕсли;
КонецПроцедуры

//надо сделать так что бы в список не попадали люди кто уже расписался
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПовторитьПриИзменении(Неопределено);
	Если ПустаяСтрока(Объект.ОтКого) Тогда
		Объект.ОтКого = ИмяПользователя();
	КонецЕсли;

	ПриОткрытииНаСервере();
КонецПроцедуры
&НаКлиенте
Процедура ДляКогоОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Руководитель = Объект.ЛицаКЗадаче.Вставить(0);
	Руководитель.ЛицаПривлеченныеКЗадаче = ВыбранноеЗначение;
	Человек = Объект.ИсполнителиЗаВесьПериод.Добавить();
	Человек.Исполнители = ВыбранноеЗначение;
КонецПроцедуры
&НаСервере
Процедура СтатусДокументаПриИзмененииНаСервере()
	Если Объект.СтатусДокумента = Перечисления.СтатусДокумента.Подписан Тогда
		Объект.Выполнена = Истина;
		Объект.ДатаФактическогоЗавершения = ТекущаяДата();
	Иначе
		Объект.Выполнена = Ложь;
		Объект.ДатаФактическогоЗавершения = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЛицаКЗадачеПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если НоваяСтрока Тогда
		Исполнитель = Объект.ЛицаКЗадаче.Получить(Объект.ЛицаКЗадаче.Количество() - 1);
		Человек = Объект.ИсполнителиЗаВесьПериод.Добавить();
		Человек.Исполнители = Исполнитель.ЛицаПривлеченныеКЗадаче;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СтатусДокументаПриИзменении()
	СтатусДокументаПриИзмененииНаСервере();
	УведомелениеУчастниковПриСменеСтатуса();
КонецПроцедуры

//здесь система уведомляет всех пользователей о смене статуса докмената и  делает запись в коментарий
&НаКлиенте
Процедура УведомелениеУчастниковПриСменеСтатуса()
	//МассивЛицДляУведомления = Новый Массив;
	Если Строка(Объект.ДляКого) <> "" Тогда
		ПолучитьСсылкуДокумента = ПолучитьНавигационнуюСсылку(Объект.Ссылка);
		Отправитель = ИмяПользователя();
		НомерДокумента = Строка(Объект.Номер);

		МассивСтруктурДляУведомления = Новый Массив;
		НовыйСтатус = Объект.СтатусДокумента;
		НоваяСтрока = Объект.ОбсужденияКЗадаче.Добавить();
		НоваяСтрока.Сообщение = "❕❕❕ " + "Новый статус документа: " + НовыйСтатус + " ❕❕❕";
		НоваяСтрока.Отправитель = ИмяПользователя();
		НоваяСтрока.ВремяСоздания = ТекущаяДата();
		НоваяСтрока.Просмотренно = Истина;

		ПолучитьСписокДляУведомления = Объект.ЛицаКЗадаче;

		Для Каждого КонтактСписка Из ПолучитьСписокДляУведомления Цикл
			СтруктураДляУведомления = Новый Структура;
			СтруктураДляУведомления.Вставить("НомерДокумента", НомерДокумента);
			СтруктураДляУведомления.Вставить("Отправитель", ИмяПользователя());
			СтруктураДляУведомления.Вставить("КогоУведомить", КонтактСписка.ЛицаПривлеченныеКЗадаче);
			СтруктураДляУведомления.Вставить("ПолучитьСсылкуДокумента", ПолучитьСсылкуДокумента);
			СтруктураДляУведомления.Вставить("НовыйСтатус", НовыйСтатус);
			МассивСтруктурДляУведомления.Добавить(СтруктураДляУведомления);
			КонтактСписка.ПросмотренноЛицаКЗадаче = Истина;
		КонецЦикла;
	КонецЕсли;
	Элементы.ОбсужденияКЗадаче.Обновить();
	УведомелениеУчастниковПриСменеСтатусаНаСервере(МассивСтруктурДляУведомления);

КонецПроцедуры

&НаСервереБезКонтекста
Функция УведомелениеУчастниковПриСменеСтатусаНаСервере(МассивСтруктурДляУведомления)

	Для Каждого ПолучательУведомления Из МассивСтруктурДляУведомления Цикл
		НоваяЗапись = РегистрыСведений.УпоминанияВКоментарияхДокумента.СоздатьМенеджерЗаписи();
		НоваяЗапись.ВремяОтправления = ТекущаяДата();
		НоваяЗапись.Период = ТекущаяДата();
		НоваяЗапись.ПолучательИзмерение = ПолучательУведомления.КогоУведомить;
		НоваяЗапись.СтатусДоставки = Ложь;
		НоваяЗапись.Отправитель = ПолучательУведомления.Отправитель;
		НоваяЗапись.Получатель = ПолучательУведомления.КогоУведомить;
		НоваяЗапись.СсылкаНаДокумент = ПолучательУведомления.ПолучитьСсылкуДокумента;
		НоваяЗапись.НомерДокумента =  ПолучательУведомления.НомерДокумента;
		НоваяЗапись.СтатусИзменерение =  ПолучательУведомления.НовыйСтатус;

		НоваяЗапись.СообщенияДляУведоления =  "❕❕❕ " + "Новый статус документа: " + ПолучательУведомления.НовыйСтатус
			+ " ❕❕❕";
		НоваяЗапись.Записать();
	КонецЦикла;
КонецФункции
&НаКлиенте
Процедура ЛицаКЗадачеПередУдалением(Элемент, Отказ)
	// чтобы работало, нужно запретить множественный выбор
	Если Элемент.ТекущиеДанные.ЛицаПривлеченныеКЗадаче = Объект.ДляКого Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ПовторитьПриИзменении(Элемент)
	ПроверитьТест = Объект.Повторить;
	Если ПроверитьТест = Истина Тогда
		Элементы.КакЧасто.Видимость = Истина;
	Иначе
		Элементы.КакЧасто.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

//Конемады файлов загрузки
&НаСервере
Процедура ВыбратьФайлыКомандаНаСервере(АдресВоВременномХранилище, ИмяСобытия, НомерЗадачи)

	ЗагрузкаФайловДокументыВызовСервера.ВыбратьФайлыКомандаНаСервере(АдресВоВременномХранилище, ИмяСобытия, НомерЗадачи);
КонецПроцедуры



//процедура не частных файлов
&НаСервере
Функция ЗагрузкаЧастныхФайлов(АдресВоВременномХранилище, ИмяСобытия)
	//здесь делаем защещенные архивы
	МассивЛогиновИПаролейОтАрхива = Новый Массив;
	ТекПользователь = ПользователиИнформационнойБазы.ТекущийПользователь();
	ИдПользователя = ТекПользователь.Имя;
	НомерЗадачи = Объект.Номер;
	ИмяКаталога = "C:\1CFilesDocument\" + Строка(ИдПользователя) + "_" + "Номер документа_" + НомерЗадачи + "\";
	КаталогПользователя = Новый Файл(ИмяКаталога);
	Если Не КаталогПользователя.Существует() Тогда
		СоздатьКаталог(КаталогПользователя);
	КонецЕсли;

	Для Каждого ФайлаИзМассива Из АдресВоВременномХранилище Цикл
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(ФайлаИзМассива.Значение);
		ИмяФайла =  ФайлаИзМассива.Представление;
		ПолноеИмяФайла = "C:\1CFilesDocument\" + Строка(ИдПользователя) + "_" + "Номер документа_" + НомерЗадачи + "\"
			+ ИмяФайла;
		ФайлВФС = Новый Файл(ПолноеИмяФайла);

		Если ФайлВФС.Существует() Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ("Такой файл уже существует");
			Сообщение.Сообщить();
		Иначе
			
			//НовыйОбъект.Записать();
			ДвоичныеДанные.Записать(ПолноеИмяФайла);

			КаталогЗип = КаталогПользователя.ПолноеИмя + "\";
			ИмяАрхива = КаталогЗип + ФайлВФС.ИмяБезРасширения + ".zip";

			Генератор = Новый ГенераторСлучайныхЧисел;
			ПарольАрхива = Строка(Формат(Генератор.СлучайноеЧисло(10000, 1000000), "ЧГ = 0"));
			ZipАрхив = Новый ЗаписьZipФайла(ИмяАрхива, ПарольАрхива, , МетодСжатияZIP.Сжатие,
				УровеньСжатияZIP.Оптимальный, МетодШифрованияZIP.Zip20);
			ZipАрхив.Добавить(ПолноеИмяФайла);
			ZipАрхив.Записать();

			СтруктураПаролейИАрхивов = Новый Структура;
			СтруктураПаролейИАрхивов.Вставить("ИмяАрхива", ФайлВФС.Имя);
			СтруктураПаролейИАрхивов.Вставить("Пароль", ПарольАрхива);
			МассивЛогиновИПаролейОтАрхива.Добавить(СтруктураПаролейИАрхивов);

			НовыйОбъект = Объект.ФайлыКЗадаче.Добавить();
			НовыйОбъект.ДатаДобавления = ТекущаяДата();
			НовыйОбъект.НаименованиеФайла = ФайлВФС.ИмяБезРасширения + ".zip";
			НовыйОбъект.СсылкаАдрес = ИмяАрхива;
			НовыйОбъект.ЧастныйФайл = Истина;
			УдалитьФайлы(ПолноеИмяФайла);
			УдалитьИзВременногоХранилища(ФайлаИзМассива.Значение);
		КонецЕсли;
		//		
	КонецЦикла;
	Возврат МассивЛогиновИПаролейОтАрхива;

КонецФункции
&НаКлиенте
Async Procedure ВыбратьЧастныеФайлы()
	ДиалогВыбораФайла = New PutFilesDialogParameters;
	ДиалогВыбораФайла.MultipleChoice = True;
	СостояниеЗагрузкиФайла = Новый ОписаниеОповещения("СостояниеЗагрузкиФайла", ЭтотОбъект);

	ФайлВВременномХранилище = Await PutFilesToServerAsync(СостояниеЗагрузкиФайла,,ДиалогВыбораФайла,);
	Notify("ЧастныеФайлыЗагруженыДокумент", ФайлВВременномХранилище);
КонецПроцедуры

&НаКлиенте
Async Procedure ВыбратьФайлыКомандаДокумент(Команда)
	ДиалогВыбораФайла = New PutFilesDialogParameters;
	ДиалогВыбораФайла.MultipleChoice = True;
	СостояниеЗагрузкиФайла = Новый ОписаниеОповещения("СостояниеЗагрузкиФайла", ЭтотОбъект);

	ФайлВВременномХранилище = Await PutFilesToServerAsync(СостояниеЗагрузкиФайла,,ДиалогВыбораФайла,);
	Notify("ФайлыЗагруженыДокумент", ФайлВВременномХранилище);
КонецПроцедуры
&НаКлиенте
Процедура СостояниеЗагрузкиФайла(ПомещаемыйФайл, Помещено, ОтказОтПомещенияФайла, ПомещеноВсего,
	ОтказОтПомещенияВсехФайлов, ДополнительныеПараметры) Экспорт
	Состояние("Загрузка на сервер" + Символы.ПС + ПомещаемыйФайл.Имя, Помещено, "Размер =" + ПомещаемыйФайл.Размер(),
		БиблиотекаКартинок.Документ);
КонецПроцедуры
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	СписокАдресовФайлов = Новый СписокЗначений;
	Если ИмяСобытия = "ФайлыЗагруженыДокумент" Тогда
		Для Каждого АдресФайлаВХ Из Параметр Цикл
			СписокАдресовФайлов.Добавить(АдресФайлаВХ.Адрес, АдресФайлаВХ.СсылкаНаФайл.Имя);
		КонецЦикла;
		НомерЗадачи = Объект.Номер;
		ВыбратьФайлыКомандаНаСервере(СписокАдресовФайлов, ИмяСобытия, НомерЗадачи);
		Прочитать();
	ИначеЕсли ИмяСобытия = "ЧастныеФайлыЗагруженыДокумент" Тогда
		Для Каждого АдресФайлаВХ Из Параметр Цикл
			СписокАдресовФайлов.Добавить(АдресФайлаВХ.Адрес, АдресФайлаВХ.СсылкаНаФайл.Имя);

		КонецЦикла;
		ЛогиныИПароли = ЗагрузкаЧастныхФайлов(СписокАдресовФайлов, ИмяСобытия);
		Для Каждого УведомляемПользователя Из ЛогиныИПароли Цикл
			ПоказатьОповещениеПользователя("Пароли допуска к частным документам: " + Символы.ПС
				+ УведомляемПользователя.ИмяАрхива + Символы.ПС + "Одноразовый пароль: " + УведомляемПользователя.Пароль,
				, "Пароли известны только Вам и не сохраняются. Запишите их!!!!", БиблиотекаКартинок.Информация,
				СтатусОповещенияПользователя.Важное, Новый УникальныйИдентификатор);
		КонецЦикла;
	ИначеЕсли ИмяСобытия = "ДобавленнаСвязнаяЗадачаКДокументу" Тогда
		НовыеФайлыВСвязнойЗадаче = Объект.СвязанныеЗадачи.Добавить();
		НовыеФайлыВСвязнойЗадаче.Задачи = Параметр;
		
		//уведомляем о новой задачи
		Если Строка(Объект.ДляКого) <> "" Тогда
			ПолучитьСсылкуДокумента = ПолучитьНавигационнуюСсылку(Объект.Ссылка);
			НомерДокумента = Строка(Объект.Номер);

			МассивСтруктурДляУведомления = Новый Массив;
			НоваяЗадачаПоследняя = Объект.СвязанныеЗадачи.Количество() - 1;
			НоваяЗадачаПолучить = Объект.СвязанныеЗадачи.Получить(НоваяЗадачаПоследняя);
			НоваяЗадача = НоваяЗадачаПолучить.Задачи;
			НоваяСтрока = Объект.ОбсужденияКЗадаче.Добавить();
			НоваяСтрока.Сообщение = "❕❕❕ " + "Новая задача : " + НоваяЗадача + " ❕❕❕";
			НоваяСтрока.Отправитель = ИмяПользователя();
			НоваяСтрока.ВремяСоздания = ТекущаяДата();
			НоваяСтрока.Просмотренно = Истина;

			ПолучитьСписокДляУведомления = Объект.ЛицаКЗадаче;
			Для Каждого КонтактСписка Из ПолучитьСписокДляУведомления Цикл
				СтруктураДляУведомления = Новый Структура;
				СтруктураДляУведомления.Вставить("НомерДокумента", НомерДокумента);
				СтруктураДляУведомления.Вставить("Отправитель", ИмяПользователя());
				СтруктураДляУведомления.Вставить("КогоУведомить", КонтактСписка.ЛицаПривлеченныеКЗадаче);
				СтруктураДляУведомления.Вставить("ПолучитьСсылкуДокумента", ПолучитьСсылкуДокумента);
				СтруктураДляУведомления.Вставить("НоваяЗадача", НоваяЗадача);
				МассивСтруктурДляУведомления.Добавить(СтруктураДляУведомления);
				КонтактСписка.ПросмотренноЛицаКЗадаче = Истина;
			КонецЦикла;
			УведомелениеУчастниковОНовойСвязнойЗадачи(МассивСтруктурДляУведомления);
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "ПинганулиВКоментах" Тогда
		УведомитьКогоОтметилиВСообщении(Параметр);
	КонецЕсли;
	Элементы.ОбсужденияКЗадаче.Обновить();
КонецПроцедуры


// для уведомления о новой задачи
&НаСервереБезКонтекста
Функция УведомелениеУчастниковОНовойСвязнойЗадачи(МассивСтруктурДляУведомления)

	Для Каждого ПолучательУведомления Из МассивСтруктурДляУведомления Цикл
		НоваяЗапись = РегистрыСведений.УпоминанияВКоментарияхСвязнаяЗадача.СоздатьМенеджерЗаписи();
		НоваяЗапись.ВремяОтправления = ТекущаяДата();
		НоваяЗапись.Период = ТекущаяДата();
		НоваяЗапись.ПолучательИзмерение = ПолучательУведомления.КогоУведомить;
		НоваяЗапись.СтатусДоставки = Ложь;
		НоваяЗапись.Отправитель = ПолучательУведомления.Отправитель;
		НоваяЗапись.Получатель = ПолучательУведомления.КогоУведомить;
		НоваяЗапись.СсылкаНаДокумент = ПолучательУведомления.ПолучитьСсылкуДокумента;
		НоваяЗапись.НомерДокумента =  ПолучательУведомления.НомерДокумента;
		НоваяЗапись.СвязнаяЗадача =  ПолучательУведомления.НоваяЗадача;

		НоваяЗапись.СообщенияДляУведоления =  "Новая задача: " + ПолучательУведомления.НоваяЗадача.Номер;
		НоваяЗапись.Записать();
	КонецЦикла;
КонецФункции

// для уведомления о новой задачи


//кнопка скачивания файлов
&НаСервере
Функция СкачатьФалыКомандаНаСервере(АдресФайла)
	ВременноеХранилищеДляФона = ПоместитьВоВременноеХранилище(Неопределено, ЭтотОбъект.УникальныйИдентификатор);
	МассивАдресовДляСкачивания = Новый Массив;
	МассивАдресовДляСкачивания.Добавить(АдресФайла);
	МассивАдресовДляСкачивания.Добавить(ВременноеХранилищеДляФона);
	ПараметрыПроцедуры = Новый Массив;
	ПараметрыПроцедуры.Добавить(МассивАдресовДляСкачивания);
	Задание = ФоновыеЗадания.Выполнить("СкачатьФайлыДокументыВызовСервера.ВыбранныйФайл", ПараметрыПроцедуры, Строка(
		Новый УникальныйИдентификатор), ВременноеХранилищеДляФона);
	Задание = Задание.ОжидатьЗавершенияВыполнения();
	Возврат Задание.Наименование;
КонецФункции
&НаКлиенте
Асинх Процедура СкачатьФалыКоманда(Команда)
	ПоказатьОповещениеПользователя("Идет подготовка фалай", ,
		"Скоро начнется загрузка, процесс будет отображен в загрузказ браузера ", БиблиотекаКартинок.Информация,
		СтатусОповещенияПользователя.Информация, Новый УникальныйИдентификатор);
	АдресВыбранногоФайла = Элементы.ФайлыКЗадаче.ТекущиеДанные;
	ИнициторДокумента = Строка(Объект.ОтКого);
	Подписант = Строка(Объект.ДляКого);
	ИмаПользователяСистемы = Строка(ИмяПользователя());
	СтатусДокумента = Строка(Объект.СтатусДокумента);

	Если СтатусДокумента <> "Подписан" Тогда
		АдресВХранилище = СкачатьФалыКомандаНаСервере(АдресВыбранногоФайла.СсылкаАдрес);
		ЖдемФайлыССервера = Ждать ПолучитьФайлССервераАсинх(АдресВХранилище,АдресВыбранногоФайла.НаименованиеФайла, Новый ПараметрыДиалогаПолученияФайлов);
	ИначеЕсли ИнициторДокумента = ИмаПользователяСистемы Тогда
		АдресВХранилище = СкачатьФалыКомандаНаСервере(АдресВыбранногоФайла.СсылкаАдрес);
		ЖдемФайлыССервера = Ждать ПолучитьФайлССервераАсинх(АдресВХранилище,АдресВыбранногоФайла.НаименованиеФайла, Новый ПараметрыДиалогаПолученияФайлов);
	ИначеЕсли Подписант = ИмаПользователяСистемы Тогда
		АдресВХранилище = СкачатьФалыКомандаНаСервере(АдресВыбранногоФайла.СсылкаАдрес);
		ЖдемФайлыССервера = Ждать ПолучитьФайлССервераАсинх(АдресВХранилище,АдресВыбранногоФайла.НаименованиеФайла, Новый ПараметрыДиалогаПолученияФайлов);
	Иначе
		ПоказатьПредупреждение( , "Документ подписан." + Символы.ПС + "Доступ с разрешения:" + Символы.ПС + Символы.ПС
			+ ИнициторДокумента + Символы.ПС + Подписант, 10);

	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбсужденияКЗадачеСообщениеОкончаниеВводаТекстаНаСервере(ДатаСообщения)

КонецПроцедуры


//добавление комментария
&НаКлиенте
Процедура ОтпрвитьСообщениеКоманда(Команда)

	ТекстСообщения = Элементы.СообщениеПользователя.ТекстРедактирования;
	СообщениеПользователя = "";
	НоваяСтрока = Объект.ОбсужденияКЗадаче.Добавить();
	НоваяСтрока.Сообщение = ТекстСообщения;
	НоваяСтрока.Отправитель = ИмяПользователя();
	НоваяСтрока.ВремяСоздания = ТекущаяДата();
	НоваяСтрока.Просмотренно = Ложь;

	ПолучитьСписокДляУведомления = Объект.ЛицаКЗадаче;
	Для Каждого КонтактСписка Из ПолучитьСписокДляУведомления Цикл
		КонтактСписка.ПросмотренноЛицаКЗадаче = Ложь;
	КонецЦикла;
	Элементы.ОбсужденияКЗадаче.Обновить();
КонецПроцедуры
&НаКлиенте
Процедура СообщениеПользователяИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПолучитьУчастниковЧата = Объект.ОбсужденияКЗадаче;
	СписокОтправителей = Новый СписокЗначений;
	Если Текст = "@" Тогда
		Для Каждого УчастникЧата Из ПолучитьУчастниковЧата Цикл
			Если СписокОтправителей.НайтиПоЗначению(УчастникЧата.Отправитель) = Неопределено Тогда
				;
				СписокОтправителей.Добавить(УчастникЧата.Отправитель, УчастникЧата.Отправитель);
			КонецЕсли;
		КонецЦикла;
		ПослевыбораЭлементаСписка = Новый ОписаниеОповещения("ПослевыбораЭлементаСписка", ЭтотОбъект);
		СписокОтправителей.ПоказатьВыборЭлемента(ПослевыбораЭлементаСписка, "Кому хотите написать?");
	Иначе 
		
		
		
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция УведомитьКогоОтметилиВСообщении(МассивПараметровКогоПиганули)
	ПараметрыПроцедуры = Новый Массив;
	ПараметрыПроцедуры.Добавить(МассивПараметровКогоПиганули);
	Задание = ФоновыеЗадания.Выполнить("СерверКогоПинганулиВКоментахВызовСервера.ПинганутьПлучателя",
		ПараметрыПроцедуры, Строка(Новый УникальныйИдентификатор));		
	//Задание = Задание.ОжидатьЗавершенияВыполнения();
КонецФункции
&НаКлиенте
Процедура ПослевыбораЭлементаСписка(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	МассивКогоПинганули = Новый Массив;
	ПолучитьСсылкуДокумента = ПолучитьНавигационнуюСсылку(Объект.Ссылка);
	ТекущееПолеСообщения = ЭтотОбъект.ТекущийЭлемент;
	СообщениеПользователя = "@" + ВыбранныйЭлемент.Значение + " ";
	КогоУведомить = ВыбранныйЭлемент.Значение;
	Отправитель = ИмяПользователя();
	НомерДокумента = Строка(Объект.Номер);
	МассивКогоПинганули.Добавить(НомерДокумента);
	МассивКогоПинганули.Добавить(Отправитель);
	МассивКогоПинганули.Добавить(КогоУведомить);
	МассивКогоПинганули.Добавить(ПолучитьСсылкуДокумента);
	Оповестить("ПинганулиВКоментах", МассивКогоПинганули);
	//УведомитьКогоОтметилиВСообщении(НомерДокумента, Отправитель, КогоУведомить, ПолучитьСсылкуДокумента);

КонецПроцедуры



//Хэштыги в поле наименования для выбора  документа
&НаСервереБезКонтекста
Функция НаименованиеИзменениеТекстаРедактированияНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	ВидыДокументовХэштэг.Ссылка КАК Ссылка
				   |ИЗ
				   |	Перечисление.ВидыДокументовХэштэг КАК ВидыДокументовХэштэг";
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	МассивВидовДокументов = Новый Массив;
	Для Каждого ВидДокумента Из РезультатЗапроса Цикл
		СделатьСтрокуДляВида = Строка(ВидДокумента.Ссылка);
		МассивВидовДокументов.Добавить(СделатьСтрокуДляВида);
	КонецЦикла;

	Возврат МассивВидовДокументов;
КонецФункции

&НаКлиенте
Процедура НаименованиеИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПолучитьВидыДокумента = НаименованиеИзменениеТекстаРедактированияНаСервере();
	СписокВидовДокументов = Новый СписокЗначений;
	Если Текст = "#" Тогда
		Для Каждого ВидДокумента Из ПолучитьВидыДокумента Цикл
			СписокВидовДокументов.Добавить(ВидДокумента, ВидДокумента);
		КонецЦикла;
		ПослеВыбораВидаДокумента = Новый ОписаниеОповещения("ПослеВыбораВидаДокумента", ЭтотОбъект);
		СписокВидовДокументов.ПоказатьВыборЭлемента(ПослеВыбораВидаДокумента, "Выберете вид документа");
	Иначе 
		
		
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораВидаДокумента(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(ВыбранныйЭлемент) <> Тип("Неопределено") Тогда
		Объект.Наименование = "#" + ВыбранныйЭлемент.Значение + "#" + " ";
		ВыбранныйВидДокумента = ВыбранныйЭлемент.Значение;
	Иначе
	КонецЕсли;

КонецПроцедуры

//Хэштыги в поле наименования для выбора  документа



//Записать и закрыть две команды по очереди
&НаКлиенте
Процедура ЗаписатьИЗакрытьФорму(Команда)
	ЭтотОбъект.Записать();
	ЭтотОбъект.Закрыть();
КонецПроцедуры
&НаСервере
Процедура МакетПроцедура(ДокументЭксель, Шаблон, НомерДокумента)

	МакетДокумента = Задачи.Документ.ПолучитьМакет(Шаблон);
	ИндексРисункаD56 = МакетДокумента.Рисунки.Получить(53);
	ИндексРисункаD56.Текст = "№" + НомерДокумента;
	ОбластьПечати = МакетДокумента.ПолучитьОбласть("R1C1:R29C23");
	ПечатнаяФормаДокумента.Очистить();

	ПечатнаяФормаДокумента.ОтображатьСетку = Истина;
	ПечатнаяФормаДокумента.Защита = Ложь;
	ПечатнаяФормаДокумента.ТолькоПросмотр = Ложь;
	ПечатнаяФормаДокумента.ОтображатьЗаголовки = Ложь;
	ПечатнаяФормаДокумента.РазмерСтраницы = "A4";
	ПечатнаяФормаДокумента.ПолеСверху = 5;
	ПечатнаяФормаДокумента.ПолеСнизу = 5;
	ПечатнаяФормаДокумента.ПолеСлева = 5;
	ПечатнаяФормаДокумента.ПолеСправа = 5;
	ПечатнаяФормаДокумента.НижнийКолонтитул.Выводить = Ложь;
	ПечатнаяФормаДокумента.ВерхнийКолонтитул.Выводить = Ложь;
	ПечатнаяФормаДокумента.АвтоМасштаб = Ложь;
	ПечатнаяФормаДокумента.МасштабПечати = 95;
	ПечатнаяФормаДокумента.Вывести(МакетДокумента);
КонецПроцедуры

&НаСервереБезКонтекста
Функция МакетПроцедураПоздАдрес(ДокументЭксель, Шаблон)

	МакетДокумента = Задачи.Документ.ПолучитьМакет(Шаблон);
	ОбластьПечати = МакетДокумента.ПолучитьОбласть("R1C1:R29C23");
	ДокументЭксель.Вывести(ОбластьПечати);
КонецФункции
&НаКлиенте
Процедура ОткрытьЭксельКоманда(Команда)
	Элементы.Группа9.Видимость = Ложь;
	Элементы.ПечатнаяФормаДокумента.Видимость = Истина;
	Элементы.ПоказатьПдфСтрокаД.Видимость = Ложь;
	Шаблон = СтрЗаменить(ШаблонДокументаПоПеречислению, " ", "");
	НомерДокумента = Строка(Объект.Номер);
	ДокументЭксель = Новый ТабличныйДокумент;
	Если Шаблон = "Поздравительныйадрес" Тогда
		МакетПроцедураПоздАдрес(ДокументЭксель, Шаблон);
		ДокументЭксель.ОтображатьСетку = Ложь;
		ДокументЭксель.Защита = Ложь;
		ДокументЭксель.ТолькоПросмотр = Ложь;
		ДокументЭксель.ОтображатьЗаголовки = Ложь;
		ДокументЭксель.РазмерСтраницы = "A4";
		ДокументЭксель.ПолеСверху = 5;
		ДокументЭксель.ПолеСнизу = 5;
		ДокументЭксель.ПолеСлева = 5;
		ДокументЭксель.ПолеСправа = 5;
		ДокументЭксель.НижнийКолонтитул.Выводить = Ложь;
		ДокументЭксель.ВерхнийКолонтитул.Выводить = Ложь;
		ДокументЭксель.АвтоМасштаб = Ложь;
		ДокументЭксель.МасштабПечати = 100;
		ДокументЭксель.Показать();

	Иначе
		МакетПроцедура(ДокументЭксель, Шаблон, НомерДокумента);
		Элементы.ПечатнаяФормаДокумента.Видимость = Истина;
		Элементы.СохранитьДокумент.Видимость = Истина;
		Элементы.ПечатнаяФормаДокумента.Редактирование = Истина;
		Элементы.ПечатнаяФормаДокумента.РастягиватьПоГоризонтали = Ложь;
		Элементы.ПечатнаяФормаДокумента.Ширина = 100;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция СоздатьЗадачуКомандаНаСервере()
	НоваяЗадача = Задачи.Задача.СоздатьЗадачу();
	ПолучитьФормуЗадачи = НоваяЗадача.ПолучитьСсылкуНового();

	Возврат ПолучитьФормуЗадачи;
КонецФункции

&НаКлиенте
Процедура СоздатьЗадачуКоманда(Команда)
	НомерДокумента = Строка(Объект.Номер);
	РодительскийДокумент = Объект.Ссылка;
	СсылкаНаНовуюЗадачу = СоздатьЗадачуКомандаНаСервере();
	ФормаНовойЗадачи = ОткрытьФорму("Задача.Задача.ФормаОбъекта", , , , , СсылкаНаНовуюЗадачу, , );
	ФормаНовойЗадачи.ЭтотОбъект.Объект.СвязаннаСДокументом = РодительскийДокумент;
КонецПроцедуры
&НаКлиенте
Процедура ФайлыКЗадачеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СкачатьФалыКоманда(Элемент);
КонецПроцедуры
&НаКлиенте
Процедура СвязанныеЗадачиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ВыбраннаяЗадача = ПолучитьНавигационнуюСсылку(Элемент.ТекущиеДанные.Задачи);
	ПерейтиПоНавигационнойСсылке(ВыбраннаяЗадача);
КонецПроцедуры

//думаю как подписать файл
&НаСервере
Функция ПодписатьКомандаНаСервере(АдресФайлаДляПодписи)
	ГраницаСлеваЛиния = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
	ГраницаСправаЛиния = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
	ГраницаВерхЛиния = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
	ГраницаНизЛиния = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
	НазваниеКомпании = "ООО «Высокие технологии»";
	СамаПодпись = НазваниеКомпании + Символы.ПС + " ЭЦП: " + Строка(ИмяПользователя()) + Символы.ПС + "от " + Строка(
		ТекущаяДата());
	ТабДок = Новый ТабличныйДокумент;
	ТекстТаб = ТабДок.Область("R1C1:R2C5");
	ТекстТаб.Объединить();
	ТекстТаб.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник;
	ТекстТаб.ГраницаСверху = ГраницаВерхЛиния;
	ТекстТаб.ГраницаСнизу = ГраницаНизЛиния;
	ТекстТаб.ГраницаСлева = ГраницаСлеваЛиния;
	ТекстТаб.ГраницаСправа = ГраницаСправаЛиния;
	ТекстТаб.ЦветРамки = Новый Цвет(255, 0, 0);
	ТекстТаб.Шрифт = Новый Шрифт(, , 10, Истина);
	ТекстТаб.ЦветТекста = Новый Цвет(255, 0, 0);
	ТекстТаб.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
	ТекстТаб.РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Авто;
	ТекстТаб.Текст = СамаПодпись;
	КартинкаПодпись = ТабДок.Область("R1C1:R2C5");
	ОписаниеПодпись = Новый ОписаниеОтображаемогоОбъектаPDF;
	ОписаниеПодпись.Имя = Строка(ИмяПользователя()) + Строка(ТекущаяДата());
	ОписаниеПодпись.Ширина = 75;
	ОписаниеПодпись.Высота = 13;
	ОписаниеПодпись.Лево = 0;
	ooo = Объект.ВерхПодписи;
	Если Объект.ВерхПодписи <> 0 Тогда
		ОписаниеПодпись.Верх = Объект.ВерхПодписи + 12;
		Объект.ВерхПодписи = ОписаниеПодпись.Верх;
	Иначе
		ОписаниеПодпись.Верх = Объект.ВерхПодписи;
		Объект.ВерхПодписи = 2;
	КонецЕсли;
	ОписаниеПодпись.НомерСтраницы = 1;
	ОписаниеПодпись.Объект = ТабДок;
	ЗаписьПдф = Новый ЗаписьPDF(АдресФайлаДляПодписи);
	ЗаписьПдф.ЗаписатьОтображаемыйОбъект(ОписаниеПодпись);
	Записать();
КонецФункции

&НаКлиенте
Асинх Процедура ПодписатьКоманда(Команда)
	Ячейка = Элементы.ФайлыКЗадаче;
	АдресФайла = Ячейка.ТекущиеДанные.СсылкаАдрес;

	ПодписатьКомандаНаСервере(АдресФайла);
КонецПроцедуры

//думаю как подписать файл

//просмотр пдф
&НаСервере
Процедура ПросмотрПдфКомандаНаСервере(АдресФайла)

	Данные = Новый ДвоичныеДанные(АдресФайла);
	PDFФайлСтрока = ПолучитьBase64СтрокуИзДвоичныхДанных(Данные);
	ПоказатьПдфСтрока = "<!DOCTYPE html>
						|<html>
						|<centre>
						|<embed width='100%' height='100%' src='data:application/pdf;base64," + PDFФайлСтрока + "' />
																												|</centre>
																												|</html>";

КонецПроцедуры

&НаКлиенте
Процедура ПросмотрПдфКоманда(Команда)
	Ячейка = Элементы.ФайлыКЗадаче;
	АдресФайла = Ячейка.ТекущиеДанные.СсылкаАдрес;
	Элементы.ПоказатьПдфСтрокаД.Видимость = Истина;
	Элементы.ЗакрытьПросмотрПдф.Видимость = Истина;

	ПросмотрПдфКомандаНаСервере(АдресФайла);
КонецПроцедуры



//просмотр пдф 


//сохранить документ и закрыть макет
&НаСервере
Процедура СохранитьДокументКомандаНаСервере()
	ТекПользователь = ПользователиИнформационнойБазы.ТекущийПользователь();
	ИдПользователя = ТекПользователь.Имя;
	НомерЗадачи = Объект.Номер;
	ааа = "Номер документа_" + НомерЗадачи;
	ВременныйФайл = ПолучитьИмяВременногоФайла(ааа);
	ПечатнаяФормаДокумента.Записать(ВременныйФайл, ТипФайлаТабличногоДокумента.PDF);
	ДвоичныеДанныеА = Новый ДвоичныеДанные(ВременныйФайл);
	ИмяКаталога = "C:\1CFilesDocument\" + "Номер документа_" + НомерЗадачи + "\";
	КаталогПользователя = Новый Файл(ИмяКаталога);
	ИмяФайла = КаталогПользователя.ИмяБезРасширения;
	Если Не КаталогПользователя.Существует() Тогда
		СоздатьКаталог(КаталогПользователя);
	КонецЕсли;
	ПолноеИмяФайла = "C:\1CFilesDocument\" + "Номер документа_" + НомерЗадачи + "\" + ИмяФайла;
	ФайлВФС = Новый Файл(ДвоичныеДанныеА);
	Если ФайлВФС.Существует() Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ("Такой файл уже существует");
		Сообщение.Сообщить();
	Иначе
		НовыйОбъект = Объект.ФайлыКЗадаче.Добавить();
		Объект.ВерхПодписи = 0;
		НовыйОбъект.ДатаДобавления = ТекущаяДата();
		НовыйОбъект.НаименованиеФайла = КаталогПользователя.Имя + ".pdf";
		ДатаДокумента = Строка(Формат(ТекущаяДата(), "ДЛФ=Д"));
		ВремяДокумента = СтрЗаменить(Строка(Формат(ТекущаяДата(), "ДЛФ=В")), ":", "_");
		ПолноеИмяФайла = "C:\1CFilesDocument\" + "Номер документа_" + НомерЗадачи + "\" + "от " + ДатаДокумента + " "
			+ ВремяДокумента + " " + ИмяФайла + ".pdf";
		НовыйОбъект.СсылкаАдрес = ПолноеИмяФайла;
		ДвоичныеДанныеА.Записать(ПолноеИмяФайла);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СохранитьДокументКоманда(Команда)
	СохранитьДокументКомандаНаСервере();
	Элементы.ПечатнаяФормаДокумента.Видимость= Ложь;
	Элементы.СохранитьДокумент.Видимость = Ложь;
	Элементы.ЗакрытьРедактор.Видимость = Ложь;
	Элементы.Группа9.Видимость = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьРедакторКоманда(Команда)
	Элементы.Группа10.Видимость = Ложь;

	Элементы.Группа9.Видимость = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьПросмотрПдфКоманда(Команда)
	Элементы.ЗакрытьПросмотрПдф.Видимость = Ложь;
	Элементы.ПоказатьПдфСтрокаД.Видимость = Ложь;
КонецПроцедуры












//сохранить документ и закрыть макет



























